<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Bio Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Bio namespace" /><meta name="Microsoft.Help.F1" content="Bio" /><meta name="Microsoft.Help.Id" content="N:Bio" /><meta name="Description" content="The base namespace for .NET Bio" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Bio" /><meta name="file" content="9836064c-7064-aaa0-909a-aee4043a25aa" /><meta name="guid" content="9836064c-7064-aaa0-909a-aee4043a25aa" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">.NET Bio<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="9836064c-7064-aaa0-909a-aee4043a25aa.htm" title=".NET Bio" tocid="roottoc">.NET Bio</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="9836064c-7064-aaa0-909a-aee4043a25aa.htm" title="Bio" tocid="9836064c-7064-aaa0-909a-aee4043a25aa">Bio</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="5e8c2768-967f-956b-62f8-867c82d3fc06.htm" title="AATree(T) Class" tocid="5e8c2768-967f-956b-62f8-867c82d3fc06">AATree(T) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="fd35b43b-17d0-d616-5b05-6117aaaf3b5c.htm" title="AATree(TKey, TValue) Class" tocid="fd35b43b-17d0-d616-5b05-6117aaaf3b5c">AATree(TKey, TValue) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="31a1f7f4-bc95-5ced-e431-4756aba6a93c.htm" title="Alphabets Class" tocid="31a1f7f4-bc95-5ced-e431-4756aba6a93c">Alphabets Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ef292549-113b-94b1-885f-7db12e5ade61.htm" title="AmbiguousDnaAlphabet Class" tocid="ef292549-113b-94b1-885f-7db12e5ade61">AmbiguousDnaAlphabet Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="5c4a2ddb-cb54-c47d-9b51-c391704bd465.htm" title="AmbiguousProteinAlphabet Class" tocid="5c4a2ddb-cb54-c47d-9b51-c391704bd465">AmbiguousProteinAlphabet Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="0ed61561-283c-0f75-2775-9e708284cef8.htm" title="AmbiguousRnaAlphabet Class" tocid="0ed61561-283c-0f75-2775-9e708284cef8">AmbiguousRnaAlphabet Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="789055ef-6a07-b691-300f-b7cb20221ee5.htm" title="BigArray(T) Class" tocid="789055ef-6a07-b691-300f-b7cb20221ee5">BigArray(T) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="918bb009-ac3b-121e-31c8-4d5abcac59d5.htm" title="BigList(T) Class" tocid="918bb009-ac3b-121e-31c8-4d5abcac59d5">BigList(T) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="95576831-9d2a-4761-e701-e13d138e6cfd.htm" title="CloneLibrary Class" tocid="95576831-9d2a-4761-e701-e13d138e6cfd">CloneLibrary Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6fd9ea1d-42be-87c1-521d-5b902b081d24.htm" title="CloneLibraryInformation Structure" tocid="6fd9ea1d-42be-87c1-521d-5b902b081d24">CloneLibraryInformation Structure</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="f8667ee3-9d04-7338-32ce-08e02576aca9.htm" title="DerivedSequence Class" tocid="f8667ee3-9d04-7338-32ce-08e02576aca9">DerivedSequence Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="7683674d-9455-f472-a7a7-2d7be8077849.htm" title="DifferenceNode Class" tocid="7683674d-9455-f472-a7a7-2d7be8077849">DifferenceNode Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="066b6cab-68c0-492c-144d-ade217c533b4.htm" title="DifferenceNode.CompareFeature Structure" tocid="066b6cab-68c0-492c-144d-ade217c533b4">DifferenceNode.CompareFeature Structure</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="90871625-bb71-36c6-fc17-fe2672ff322b.htm" title="DnaAlphabet Class" tocid="90871625-bb71-36c6-fc17-fe2672ff322b">DnaAlphabet Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="1b609bb0-3472-424b-cc89-51b53c941802.htm" title="FastQFormatType Enumeration" tocid="1b609bb0-3472-424b-cc89-51b53c941802">FastQFormatType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="4dfaaa41-1518-7144-5cff-2745ab64d362.htm" title="IAlphabet Interface" tocid="4dfaaa41-1518-7144-5cff-2745ab64d362">IAlphabet Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="07027fcf-59f9-b53e-3581-de1c00888f99.htm" title="IConsensusResolver Interface" tocid="07027fcf-59f9-b53e-3581-de1c00888f99">IConsensusResolver Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="068ac1a7-f13b-8786-c83e-26e531f42c2d.htm" title="IndexedItem(T) Class" tocid="068ac1a7-f13b-8786-c83e-26e531f42c2d">IndexedItem(T) Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="35ab706d-e99b-9876-9001-15c48b0033c7.htm" title="IntersectOutputType Enumeration" tocid="35ab706d-e99b-9876-9001-15c48b0033c7">IntersectOutputType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="b428e590-a573-c472-9381-8b4fffda050f.htm" title="IParameterValidator Interface" tocid="b428e590-a573-c472-9381-8b4fffda050f">IParameterValidator Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="af93c727-2c51-9706-99e9-7c3d4391d584.htm" title="IQualitativeSequence Interface" tocid="af93c727-2c51-9706-99e9-7c3d4391d584">IQualitativeSequence Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="45a86cd1-3f2f-b3af-057d-12845d722a5e.htm" title="ISequence Interface" tocid="45a86cd1-3f2f-b3af-057d-12845d722a5e">ISequence Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="073e7716-e248-e3e8-5afb-1e7cb58eb6e1.htm" title="ISequenceRange Interface" tocid="073e7716-e248-e3e8-5afb-1e7cb58eb6e1">ISequenceRange Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="da6fbb0f-2659-da98-f356-3bef4c09b95c.htm" title="MetadataListItem(T) Class" tocid="da6fbb0f-2659-da98-f356-3bef4c09b95c">MetadataListItem(T) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="22abf2a9-4f1a-6a55-6a37-e5e60d327931.htm" title="PlatformManager Class" tocid="22abf2a9-4f1a-6a55-6a37-e5e60d327931">PlatformManager Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="8894aaea-86b3-142b-f1ac-5356d37e772a.htm" title="ProteinAlphabet Class" tocid="8894aaea-86b3-142b-f1ac-5356d37e772a">ProteinAlphabet Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="905397ce-e4f1-4d32-b979-7189058a8fe4.htm" title="QualitativeSequence Class" tocid="905397ce-e4f1-4d32-b979-7189058a8fe4">QualitativeSequence Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="f1e74754-51a5-de35-a5f7-2c16edf15337.htm" title="RnaAlphabet Class" tocid="f1e74754-51a5-de35-a5f7-2c16edf15337">RnaAlphabet Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="52b4746d-7583-657b-383f-a6085c5fd205.htm" title="Sequence Class" tocid="52b4746d-7583-657b-383f-a6085c5fd205">Sequence Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="16514026-f815-6caa-a542-582882c07b37.htm" title="SequenceEqualityComparer Class" tocid="16514026-f815-6caa-a542-582882c07b37">SequenceEqualityComparer Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="27181366-1be0-f013-784b-8f7dc88de106.htm" title="SequenceRange Class" tocid="27181366-1be0-f013-784b-8f7dc88de106">SequenceRange Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="976dbe7d-13e7-4258-a8ed-27c2d1c3b950.htm" title="SequenceRangeGrouping Class" tocid="976dbe7d-13e7-4258-a8ed-27c2d1c3b950">SequenceRangeGrouping Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c2c31340-927d-404f-c214-eb62b5c6d87b.htm" title="SequenceStatistics Class" tocid="c2c31340-927d-404f-c214-eb62b5c6d87b">SequenceStatistics Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="76c2cc64-c251-514f-5fb7-1405be176977.htm" title="SimpleConsensusResolver Class" tocid="76c2cc64-c251-514f-5fb7-1405be176977">SimpleConsensusResolver Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d0736467-5ebc-bbbf-e538-26fc3f48c703.htm" title="SnpItem Class" tocid="d0736467-5ebc-bbbf-e538-26fc3f48c703">SnpItem Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="9ae42fb2-d3c4-ea36-8511-58eec334db7a.htm" title="SparseSequence Class" tocid="9ae42fb2-d3c4-ea36-8511-58eec334db7a">SparseSequence Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="29e02d00-5987-82c2-e824-ae97d92a2b0b.htm" title="StringListValidator Class" tocid="29e02d00-5987-82c2-e824-ae97d92a2b0b">StringListValidator Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="cb406f49-43d9-b0c0-c3e3-8d4d330d8c3f.htm" title="SubtractOutputType Enumeration" tocid="cb406f49-43d9-b0c0-c3e3-8d4d330d8c3f">SubtractOutputType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="3c1d1a6a-a22b-e0e0-9fe2-9c7888ad4355.htm" title="WordMatch Class" tocid="3c1d1a6a-a22b-e0e0-9fe2-9c7888ad4355">WordMatch Class</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">Bio Namespace</td></tr></table><span class="introStyle"></span><div class="summary">The base namespace for .NET Bio</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Classes</span></div><div id="ID0RBSection" class="collapsibleSection"><table id="typeList" class="members"><tr><th class="iconColumn">
					 
				</th><th>Class</th><th>Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="5e8c2768-967f-956b-62f8-867c82d3fc06.htm">AATree<span id="LSTD86D3BF4_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD86D3BF4_0?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTD86D3BF4_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD86D3BF4_1?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
             Arne Andersson Self Balancing Binary Search Tree.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="fd35b43b-17d0-d616-5b05-6117aaaf3b5c.htm">AATree<span id="LSTD86D3BF4_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD86D3BF4_2?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LSTD86D3BF4_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD86D3BF4_3?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Dictionary like implementation using AATree.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="31a1f7f4-bc95-5ced-e431-4756aba6a93c.htm">Alphabets</a></td><td><div class="summary">
            The currently supported and built-in alphabets for sequence items.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="ef292549-113b-94b1-885f-7db12e5ade61.htm">AmbiguousDnaAlphabet</a></td><td><div class="summary">
            Ambiguous symbol in the DNA.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="5c4a2ddb-cb54-c47d-9b51-c391704bd465.htm">AmbiguousProteinAlphabet</a></td><td><div class="summary">
            Ambiguous characters in the Protein.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="0ed61561-283c-0f75-2775-9e708284cef8.htm">AmbiguousRnaAlphabet</a></td><td><div class="summary">
            Ambiguous symbols in the RNA.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="789055ef-6a07-b691-300f-b7cb20221ee5.htm">BigArray<span id="LSTD86D3BF4_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD86D3BF4_4?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTD86D3BF4_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD86D3BF4_5?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary" /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="918bb009-ac3b-121e-31c8-4d5abcac59d5.htm">BigList<span id="LSTD86D3BF4_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD86D3BF4_6?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTD86D3BF4_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD86D3BF4_7?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Represents a strongly typed list of objects.
            Uses BigArray to store objects.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="95576831-9d2a-4761-e701-e13d138e6cfd.htm">CloneLibrary</a></td><td><div class="summary">
            Class created for reading data from resource file having library information.
            Singleton design pattern is used to create only one instance of class. 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="f8667ee3-9d04-7338-32ce-08e02576aca9.htm">DerivedSequence</a></td><td><div class="summary">
            This is a temporary implementation of DerivedSequence to support reversing and complementing a sequence.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="7683674d-9455-f472-a7a7-2d7be8077849.htm">DifferenceNode</a></td><td><div class="summary">
            Node that tracks difference between the two sequences.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="90871625-bb71-36c6-fc17-fe2672ff322b.htm">DnaAlphabet</a></td><td><div class="summary">
                The basic alphabet that describes symbols used in DNA sequences.
                This alphabet allows not only for the four base nucleotide symbols,
                but also for various ambiguities, termination, and gap symbols.
                <p>
                    The character representations come from the NCBI4na standard and
                    are used in many sequence file formats. The NCBI4na standard is the
                    same as the IUPACna standard with only the addition of the gap
                    character.
                </p><p>
                    The entries in this dictionary are:
                    Symbol - Name
                    A - Adenine
                    C - Cytosine
                    M - A or C
                    G - Guanine
                    R - G or A
                    S - G or C
                    V - G or V or A
                    T - Thymine
                    W - A or T
                    Y - T or C
                    H - A or C or T
                    K - G or T
                    D - G or A or T
                    B - G or T or C
                    - - Gap
                    N - A or G or T or C.
                </p></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="068ac1a7-f13b-8786-c83e-26e531f42c2d.htm">IndexedItem<span id="LSTD86D3BF4_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD86D3BF4_8?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTD86D3BF4_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD86D3BF4_9?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            IndexedItem holds an item and its index.
            Index is a zero based position of item.
            This class is used in Sparse Sequence to get the known sequence items with their positions.
            
            This class implements IComparable interface and all comparisons are based on index 
            and not on item.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="da6fbb0f-2659-da98-f356-3bef4c09b95c.htm">MetadataListItem<span id="LSTD86D3BF4_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD86D3BF4_10?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTD86D3BF4_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD86D3BF4_11?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            It is common for a biological sequence file to contain lists of certain types of metadata,
            such as features or references, which can be stored as MetadataListItems.  A
            MetadataListItem contains a key (which might not be unique) a free-text field of top level
            information (such as a sequence location), and a list of sub-items, each consisting of
            a key and a data field of type T.  If the sub-items have unique keys, a string type can be
            used for T.  But if the sub-item keys are not unique, a list of strings should be used
            for T.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="22abf2a9-4f1a-6a55-6a37-e5e60d327931.htm">PlatformManager</a></td><td><div class="summary">
            Platform manager - this holds all the platform specific services.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="8894aaea-86b3-142b-f1ac-5356d37e772a.htm">ProteinAlphabet</a></td><td><div class="summary">
            The basic alphabet that describes symbols used in sequences of amino
            acids that come from codon encodings of RNA. This alphabet allows for
            the twenty amino acids as well as a termination and gap symbol.
            <p>
            The character representations come from the NCBIstdaa standard and
            are used in many sequence file formats. The NCBIstdaa standard has all
            the same characters as NCBIeaa and IUPACaa, but adds Selenocysteine,
            termination, and gap symbols to the latter.
            </p><p>
            The entries in this dictionary are:
            Symbol - Extended Symbol - Name
            A - Ala - Alanine
            C - Cys - Cysteine
            D - Asp - Aspartic Acid
            E - Glu - Glutamic Acid
            F - Phe - Phenylalanine
            G - Gly - Glycine
            H - His - Histidine
            I - Ile - Isoleucine
            K - Lys - Lysine
            L - Leu - Leucine
            M - Met - Methionine
            N - Asn - Asparagine
            O - Pyl - Pyrrolysine
            P - Pro - Proline
            Q - Gln - Glutamine
            R - Arg - Arginine
            S - Ser - Serine
            T - Thr - Threoine
            U - Sel - Selenocysteine
            V - Val - Valine
            W - Trp - Tryptophan
            Y - Tyr - Tyrosine
            * - Ter - Termination
            - - --- - Gap.
            </p></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="905397ce-e4f1-4d32-b979-7189058a8fe4.htm">QualitativeSequence</a></td><td><div class="summary">
            This class holds quality scores along with the sequence data.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="f1e74754-51a5-de35-a5f7-2c16edf15337.htm">RnaAlphabet</a></td><td><div class="summary">
            The basic alphabet that describes symbols used in RNA sequences.
            This alphabet allows not only for the four base nucleotide symbols,
            but also for various ambiguities, termination, and gap symbols.
            <p>
            The symbol representations come from the NCBI4na standard and
            are used in many sequence file formats. The NCBI4na standard is the
            same as the IUPACna standard with only the addition of the gap
            symbol.
            </p><p>
            The entries in this dictionary are:
            Symbol - Name
            A - Adenine
            C - Cytosine
            M - A or C
            G - Guanine
            R - G or A
            S - G or C
            V - G or V or A
            U - Uracil
            W - A or U
            Y - U or C
            H - A or C or U
            K - G or U
            D - G or A or U
            B - G or U or C
            - - Gap
            N - A or G or U or C.
            </p></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="52b4746d-7583-657b-383f-a6085c5fd205.htm">Sequence</a></td><td><div class="summary">
            This is the standard implementation of the ISequence interface. It contains
            the raw data that defines the contents of a sequence. Since Sequence uses 
            enumerable of bytes that can be accessed as follows:
            Sequence mySequence = new Sequence(Alphabets.DNA, "GATTC");
            foreach (Nucleotide nucleotide in mySequence) { ... }
            The results will be based on the Alphabet associated with the
            sequence. Common alphabets include those for DNA, RNA, and Amino Acids.
            For users who wish to get at the underlying data directly, Sequence provides
            a means to do this as well. This may be useful for those writing algorithms
            against the sequence where performance is especially important. For these
            advanced users access is provided to the encoding classes associated with the
            sequence.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="16514026-f815-6caa-a542-582882c07b37.htm">SequenceEqualityComparer</a></td><td><div class="summary">
            This class gives the Sequence Equality Comparer.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="27181366-1be0-f013-784b-8f7dc88de106.htm">SequenceRange</a></td><td><div class="summary">
            A SequenceRange holds the data necessary to represent a region within
            a sequence defined by its start and end index without necessarily holding
            any of the sequence item data. At a minimum and ID, start index, and end
            index are required. Additional metadata can be stored as well using a
            generic key value pair.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="976dbe7d-13e7-4258-a8ed-27c2d1c3b950.htm">SequenceRangeGrouping</a></td><td><div class="summary">
            A grouping of SequenceRange objects sorted by their ID values. The
            purpose of these groups is to allow a set of SequenceRange objects
            to be associated together by bucketing them into groups where each
            bucket has a unique SequenceRange ID and all SequenceRange objects
            within the bucket has that same ID.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="c2c31340-927d-404f-c214-eb62b5c6d87b.htm">SequenceStatistics</a></td><td><div class="summary">
            SequenceStatistics is used to keep track of the number of occurrences of each symbol within
            a sequence.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="76c2cc64-c251-514f-5fb7-1405be176977.htm">SimpleConsensusResolver</a></td><td><div class="summary">
            Calculate the consensus for a list of symbols using simple frequency fraction method.
            Normal (non-gap) symbols are given a weight of 100. 
            The confidence of a symbol is the sum of weights for that symbol, 
            divided by the total number of symbols occurring at that position. 
            If symbols have confidence &gt;= threshold, symbol corresponding 
            to set of these high confidence symbols is used.
            If no symbol meets the threshold, symbol corresponding 
            to set of all the symbols at that position is used.
            <p>
            For ambiguous symbols, the corresponding set of base symbols are retrieved.
            And for frequency calculation, each base symbol is given a weight of 
            (100 / number of base symbols).
            </p></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="d0736467-5ebc-bbbf-e538-26fc3f48c703.htm">SnpItem</a></td><td><div class="summary">
            Represents a single nucleotide polymporphism (Snp) at a particular
            position for a certain chromosome, with the two possible allele
            values for that position.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="9ae42fb2-d3c4-ea36-8511-58eec334db7a.htm">SparseSequence</a></td><td><div class="summary">
             SparseSequence can hold discontinuous sequence. Use this class for storing the sequence items 
             with their known position from a long continuous sequence.  This class uses SortedDictionary to store 
             the sequence items with their position. Position is zero based indexes at which a sequence items 
             are present in the original continues sequence.
             For example: 
             To store sequence items at position 10, 101, 200, 1501 this class can be used as shown in the below code.
             
             // Create a SparseSequence by specifying the Alphabet.
             SparseSequence mySparseSequence= new SparseSequence(Alphabets.DNA);
             
             // By default count will be set to zero. To insert a sequence item at a position greater than zero,
             // Count has to be set to a value greater than the maximum position value. 
             // If try to insert a sequence item at a position greater than the count an exception will occur.
             // You can limit the SparseSequence length by setting the count to desired value. In this example it 
             will be 1502 as the maximum index is 1501.
             mySparseSequence.Count = 1502;
             
             // To access the value in a SparseSequence use Indexer or an Enumerator like below.
            
             // Accessing SparsesSequence using Indexer.
             byte seqItem1 = mySparseSequence [10] ;  // this will return sequence item A.
             byte seqItem2 = mySparseSequence [1501] ;  // this will return sequence item G.
             byte seqItem3 = mySparseSequence [102] ;  // this will return null as there is no sequence item at this position.
             
             // Accessing SparsesSequence using Enumerator.
             foreach(byte seqItem in mySparseSequence) {…}
             </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="29e02d00-5987-82c2-e824-ae97d92a2b0b.htm">StringListValidator</a></td><td><div class="summary">
            A validator for string values that has a specific list of allowed values.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="3c1d1a6a-a22b-e0e0-9fe2-9c7888ad4355.htm">WordMatch</a></td><td><div class="summary">
                WordMatch stores the region of similarity between two sequences.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Structures</span></div><div id="ID1RBSection" class="collapsibleSection"><table id="typeList" class="members"><tr><th class="iconColumn">
					 
				</th><th>Structure</th><th>Description</th></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="6fd9ea1d-42be-87c1-521d-5b902b081d24.htm">CloneLibraryInformation</a></td><td><div class="summary">
            Stores Information of Library.
            </div></td></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="066b6cab-68c0-492c-144d-ade217c533b4.htm">DifferenceNode<span id="LSTD86D3BF4_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD86D3BF4_12?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>CompareFeature</a></td><td><div class="summary">
            Structure that maintains node structure for feature list.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Interfaces</span></div><div id="ID2RBSection" class="collapsibleSection"><table id="typeList" class="members"><tr><th class="iconColumn">
					 
				</th><th>Interface</th><th>Description</th></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="4dfaaa41-1518-7144-5cff-2745ab64d362.htm">IAlphabet</a></td><td><div class="summary">
            An alphabet defines a set of symbols common to a particular representation
            of a biological sequence. The symbols in these alphabets are those you would find
            as the individual sequence items in an ISequence variable.
            <p>
            The symbols in an alphabet may represent a particular biological structure
            or they may represent information helpful in understanding a sequence. For instance
            gap symbol, termination symbol, and symbols representing items whose
            definition remains ambiguous are all allowed.
            </p></div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="07027fcf-59f9-b53e-3581-de1c00888f99.htm">IConsensusResolver</a></td><td><div class="summary">
            Framework to compute the consensus for a list of symbols
            <p>
            For example, one can construct consensus for 
            a set of aligned sequences in the following way: 
            Sequence 1: A G T C G A
            Sequence 2: A G G C - A
            Sequence 3: A G G T G -
            Consensus : A G G C G A
            </p><p>
            In the example here, we might choose the character that 
            occurs maximum number of times for consensus
            This means that consensus for characters at position 1: {A, A, A} is A,
            while consensus for characters at position 3: {T, G, G} is G, and so on.
            </p>
            This interface provides the framework for consensus generation. 
            Implement this interface to provide different implementations 
            for building consensus.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="b428e590-a573-c472-9381-8b4fffda050f.htm">IParameterValidator</a></td><td><div class="summary">
            A simple interface to an object that can check a value
            for conformance to any required validation rules.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="af93c727-2c51-9706-99e9-7c3d4391d584.htm">IQualitativeSequence</a></td><td><div class="summary">
            Sequence with qualitative data
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="45a86cd1-3f2f-b3af-057d-12845d722a5e.htm">ISequence</a></td><td><div class="summary">
            Implementations of ISequence make up the one of the core sets
            of data structures in Bio. It is these sequences that store
            data relevant to DNA, RNA, and Amino Acid structures. Several
            algorithms for alignment, assembly, and analysis take these items
            as their basic data inputs and outputs.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="073e7716-e248-e3e8-5afb-1e7cb58eb6e1.htm">ISequenceRange</a></td><td><div class="summary">
            A SequenceRange holds the data necessary to represent a region within
            a sequence defined by its start and end index without necessarily holding
            any of the sequence item data. At a minimum and ID, start index, and end
            index are required. Additional metadata can be stored as well using a
            generic key value pair.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Enumerations</span></div><div id="ID3RBSection" class="collapsibleSection"><table id="typeList" class="members"><tr><th class="iconColumn">
					 
				</th><th>Enumeration</th><th>Description</th></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="1b609bb0-3472-424b-cc89-51b53c941802.htm">FastQFormatType</a></td><td><div class="summary">
            A FastQFormatType specifies the format of quality scores.
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="35ab706d-e99b-9876-9001-15c48b0033c7.htm">IntersectOutputType</a></td><td><div class="summary">
            This enum indicates type of output an intersect operation should return.
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="cb406f49-43d9-b0c0-c3e3-8d4d330d8c3f.htm">SubtractOutputType</a></td><td><div class="summary">
            This enum indicates type of output an subtract operation should return.
            </div></td></tr></table></div></div></div><div id="pageFooter" class="pageFooter"> </div></body><script type="text/javascript">
<!--
    var tocNav = document.getElementById("tocNav");
    var anchor = tocNav.children[0].children[0];
    Toggle(anchor);
    tocNav.children[0].className += " current";
-->
</script>
</html>